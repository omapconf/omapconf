/*
 *
 * @Component			OMAPCONF
 * @Filename			smartreflex44xx.h
 * @Description			Dump & Analyse SMARTREFLEX registers
 * @Author			Patrick Titiano (p-titiano@ti.com)
 * @Date			2006
 * @Copyright			Texas Instruments Incorporated
 *
 *
 * Copyright (C) 2006 Texas Instruments Incorporated - http://www.ti.com/
 *
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */


#ifndef __SMARTREFLEX44XX_H__
#define __SMARTREFLEX44XX_H__


#include <stdio.h>


#define OMAP4430_SR_MPU_BASE	0x4A0D9000
#define OMAP4430_SR_IVA_BASE	0x4A0DB000
#define OMAP4430_SR_CORE_BASE	0x4A0DD000

#define SRCONFIG		0x00
#define SRSTATUS		0x04
#define SENVAL			0x08
#define SENMIN			0x0C
#define SENMAX			0x10
#define SENAVG			0x14
#define AVGWEIGHT		0x18
#define NVALUERECIPROCAL	0x1C
#define IRQSTATUS_RAW		0x24
#define IRQSTATUS		0x28
#define IRQENABLE_SET		0x2C
#define IRQENABLE_CLR		0x30
#define SENERROR		0x34
#define ERRCONFIG		0x38

#define OMAP44XX_SR_REGADDR(module, reg) ((module) + (reg))

#define OMAP4430_SR_MPU_SRCONFIG		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x00)
#define OMAP4430_SR_MPU_SRSTATUS		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x04)
#define OMAP4430_SR_MPU_SENVAL			OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x08)
#define OMAP4430_SR_MPU_SENMIN			OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x0C)
#define OMAP4430_SR_MPU_SENMAX			OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x10)
#define OMAP4430_SR_MPU_SENAVG			OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x14)
#define OMAP4430_SR_MPU_AVGWEIGHT		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x18)
#define OMAP4430_SR_MPU_NVALUERECIPROCAL	OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x1C)
#define OMAP4430_SR_MPU_IRQSTATUS_RAW		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x24)
#define OMAP4430_SR_MPU_IRQSTATUS		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x28)
#define OMAP4430_SR_MPU_IRQENABLE_SET		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x2C)
#define OMAP4430_SR_MPU_IRQENABLE_CLR		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x30)
#define OMAP4430_SR_MPU_SENERROR		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x34)
#define OMAP4430_SR_MPU_ERRCONFIG		OMAP44XX_SR_REGADDR(OMAP4430_SR_MPU_BASE, 0x38)

#define OMAP4430_SR_IVA_SRCONFIG		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x00)
#define OMAP4430_SR_IVA_SRSTATUS		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x04)
#define OMAP4430_SR_IVA_SENVAL			OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x08)
#define OMAP4430_SR_IVA_SENMIN			OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x0C)
#define OMAP4430_SR_IVA_SENMAX			OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x10)
#define OMAP4430_SR_IVA_SENAVG			OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x14)
#define OMAP4430_SR_IVA_AVGWEIGHT		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x18)
#define OMAP4430_SR_IVA_NVALUERECIPROCAL	OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x1C)
#define OMAP4430_SR_IVA_IRQSTATUS_RAW		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x24)
#define OMAP4430_SR_IVA_IRQSTATUS		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x28)
#define OMAP4430_SR_IVA_IRQENABLE_SET		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x2C)
#define OMAP4430_SR_IVA_IRQENABLE_CLR		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x30)
#define OMAP4430_SR_IVA_SENERROR		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x34)
#define OMAP4430_SR_IVA_ERRCONFIG		OMAP44XX_SR_REGADDR(OMAP4430_SR_IVA_BASE, 0x38)

#define OMAP4430_SR_CORE_SRCONFIG		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x00)
#define OMAP4430_SR_CORE_SRSTATUS		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x04)
#define OMAP4430_SR_CORE_SENVAL			OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x08)
#define OMAP4430_SR_CORE_SENMIN			OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x0C)
#define OMAP4430_SR_CORE_SENMAX			OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x10)
#define OMAP4430_SR_CORE_SENAVG			OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x14)
#define OMAP4430_SR_CORE_AVGWEIGHT		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x18)
#define OMAP4430_SR_CORE_NVALUERECIPROCAL	OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x1C)
#define OMAP4430_SR_CORE_IRQSTATUS_RAW		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x24)
#define OMAP4430_SR_CORE_IRQSTATUS		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x28)
#define OMAP4430_SR_CORE_IRQENABLE_SET		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x2C)
#define OMAP4430_SR_CORE_IRQENABLE_CLR		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x30)
#define OMAP4430_SR_CORE_SENERROR		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x34)
#define OMAP4430_SR_CORE_ERRCONFIG		OMAP44XX_SR_REGADDR(OMAP4430_SR_CORE_BASE, 0x38)


typedef enum {
	OMAP4_SR_MPU,
	OMAP4_SR_IVA,
	OMAP4_SR_CORE,
	OMAP4_SR_ID_MAX
} omap4_sr_module_id;


const char *sr44xx_name_get(omap4_sr_module_id sr_id);

unsigned int sr44xx_is_enabled(omap4_sr_module_id sr_id);
int sr44xx_vp_voltage_get(omap4_sr_module_id sr_id, double *volt);
int sr44xx_voltage_set(unsigned int vdd_id, unsigned long uv);

int sr44xx_name2addr(char *name, unsigned int *addr);
int sr44xx_dump(void);
int sr44xx_config_show(FILE *stream);
int sr44xx_status_show(FILE *stream);
int sr44xx_audit(FILE *stream, omap4_sr_module_id sr_id,
	unsigned int *err_nbr, unsigned int *wng_nbr);


#endif
